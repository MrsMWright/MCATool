@using System.Activities.Statements
@using GridMvc.Html
@using Sfw.Sabp.Mca.Web.ViewModels
@model AssessmentListViewModel
@{
    ViewBag.Title = "Assessments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Assessments</h2>
<br />
<p> WARNING: All actions on this tool are audited and logged. You should only be accessing those records which you are authorised to do so.</p>
<br />

@Html.Grid(Model.Items.OrderByDescending(p => p.DateAssessmentStarted).ThenBy(p => p.Stage1DecisionToBeMade)).Columns(columns =>
{
    columns.Add(assessment => assessment.Patient.ClinicalSystemId)
        .Encoded(false)
        .Sanitized(false)
        .Titled(@Model.ClinicalIdDescription);

    columns.Add(assessment => assessment.DateAssessmentStarted)
        .Encoded(false)
        .Sanitized(false)
        .Titled("Date of Assessment")
        .RenderValueAs(o => o.DateAssessmentStarted.ToString("dd/MM/yyyy"));

    columns.Add(assessment => assessment.Stage1DecisionToBeMade)
        .Encoded(false)
        .Sanitized(false)
        .Titled("Assessment Title");

    columns.Add(assessment => assessment.AssessorName)
        .Encoded(false)
        .Sanitized(false)
        .Titled("Assessor Name");

    columns.Add(assessment => assessment.Status.Description)
        .Encoded(false)
        .Sanitized(false)
        .Titled("Status");

    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .Titled("")
        .RenderValueAs(assessment => CustomPdfRendering(assessment));
    
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .Titled("")
        .RenderValueAs(assessment => CustomContinueRendering(assessment));

}).Sortable(false)

<br />

@Html.ActionLink("Begin New Assessment", MVC.Assessment.Create(@Model.PatientId), new { @class = "btn btn-default" })
@Html.ActionLink("Search For New Person", MVC.Person.Index(), new { @class = "btn btn-default" })

@helper CustomContinueRendering(AssessmentViewModel assessment)
{
    if (assessment.CanRestart)
    {
        @Html.ActionLink("Resume", MVC.Assessment.Restart(assessment.AssessmentId))
    }
    else if (assessment.CanRevise)
    {
        @Html.ActionLink("Revise", MVC.Assessment.Edit(assessment.AssessmentId), new { @data_confirmprompt_url = "This revise function gives you the opportunity to edit any text to fix spelling or grammar mistakes.  It should not be used to change any of the facts of the assessment.  You can not change any of the choices made during the assessment." })
    }
}

@helper CustomPdfRendering(AssessmentViewModel assessment)
{
    if (assessment.CanViewPdf)
    {
        @Html.ActionLink("Download PDF", MVC.Assessment.CreatePdf(assessment.AssessmentId, assessment.Patient.ClinicalSystemId))
    }
}


